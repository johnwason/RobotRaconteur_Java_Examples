//This file is automatically generated. DO NOT EDIT!
package experimental.create;
import java.util.*;
import com.robotraconteur.*;
public class Create_skel extends ServiceSkel {
    protected Create obj;
    public Create_skel(Object o) { 
    super(o);
    obj=(Create)o;
    }
    public void releaseCastObject() { 
    obj=null;
    super.releaseCastObject();
    }
    public MessageElement callGetProperty(String membername) {
    if(membername.equals( "DistanceTraveled"))
    {
    int ret=obj.get_DistanceTraveled();
    return MessageElementUtil.newMessageElementDispose("return",new int[] {ret});
    }
    if(membername.equals( "AngleTraveled"))
    {
    int ret=obj.get_AngleTraveled();
    return MessageElementUtil.newMessageElementDispose("return",new int[] {ret});
    }
    if(membername.equals( "Bumpers"))
    {
    UnsignedByte ret=obj.get_Bumpers();
    return MessageElementUtil.newMessageElementDispose("return",ret.array());
    }
    throw new MemberNotFoundException("Member not found");
    }
    public void callSetProperty(String membername, MessageElement m) {
    if(membername.equals( "DistanceTraveled"))
    {
    obj.set_DistanceTraveled((MessageElementUtil.<int[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "AngleTraveled"))
    {
    obj.set_AngleTraveled((MessageElementUtil.<int[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "Bumpers"))
    {
    obj.set_Bumpers(MessageElementUtil.<UnsignedBytes>castDataAndDispose(m).get(0));
    return;
    }
    throw new MemberNotFoundException("Member not found");
    }
    public MessageElement callFunction(String rr_membername, vectorptr_messageelement rr_m) {
    if(rr_membername.equals( "Drive"))
    {
    short velocity=(MessageElementUtil.<short[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"velocity")))[0];
    short radius=(MessageElementUtil.<short[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"radius")))[0];
    this.obj.Drive(velocity, radius);
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "StartStreaming"))
    {
    this.obj.StartStreaming();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "StopStreaming"))
    {
    this.obj.StopStreaming();
    return new MessageElement("return",new int[] {0});
    }
    throw new MemberNotFoundException("Member not found");
    }
    public Object getSubObj(String name, String ind) {
    throw new MemberNotFoundException("");
    }
    rr_Bump rrvar_Bump=new rr_Bump();
    public void registerEvents(Object obj1) {
    obj=(Create)obj1;
    obj.addBumpListener(rrvar_Bump);
    }
    public void unregisterEvents(Object obj1) {
    obj=(Create)obj1;
    obj.removeBumpListener(rrvar_Bump);
    }
    private class rr_Bump implements Action{
    public void action() {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    try {
    Create_skel.this.innerskel.wrappedDispatchEvent("Bump",rr_param);
    }
    finally {
    rr_param.delete();
    }
    }
    }
    class rr_play_callback implements Func2<Integer,Integer,UnsignedBytes> {
    long endpoint;
    public rr_play_callback(long endpoint) { this.endpoint=endpoint; }
    public UnsignedBytes func(Integer DistanceTraveled, Integer AngleTraveled) {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.newMessageElementDispose("DistanceTraveled",new int[] {DistanceTraveled}));
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.newMessageElementDispose("AngleTraveled",new int[] {AngleTraveled}));
    rr_me=Create_skel.this.innerskel.wrappedCallbackCall("play_callback",this.endpoint,rr_param);
    return MessageElementUtil.<UnsignedBytes>castDataAndDispose(rr_me);
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    }
    public Object getCallbackFunction(long endpoint, String membername) {
    if(membername.equals( "play_callback")) {
    return new rr_play_callback(endpoint);
    }
    throw new MemberNotFoundException("Member not found");
    }
    public  void initPipeServers(Object obj1) {
    obj=(Create)obj1;
    }
    public void initCallbackServers(Object obj1) {
    obj=(Create)obj1;
    obj.set_play_callback(new CallbackServer<Func2<Integer,Integer,UnsignedBytes>>("play_callback",this));
    }
    public void initWireServers(Object obj1) {
    obj=(Create)obj1;
    obj.set_packets(new Wire<SensorPacket>(innerskel.getWire("packets")));
    }
    public WrappedArrayMemoryDirector getArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedMultiDimArrayMemoryDirector getMultiDimArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public String getRRType() { return "experimental.create.Create"; }
}
